ArgCheck.isNonNegativeInt=Expected argument to be non-negative but argument= {0}
ArgCheck.isNonPositiveInt=Expected argument to be non-positive but argument= {0}
ArgCheck.isNegativeInt=Expected argument to be negative but argument= {0}
ArgCheck.isPositiveInt=Expected argument to be positive but argument= {0}
ArgCheck.isStringNonZeroLength=Expected argument to have at least one character
ArgCheck.isNonNull=Expected argument to be non-null but got null
ArgCheck.isNull=Expected argument to be null but got non-null
ArgCheck.isInstanceOf=Expected argument to be an instance of {0}; was instance of {1}
ArgCheck.isCollectionNotEmpty=Expected collection to be non-empty
ArgCheck.isMapNotEmpty=Expected map to be non-empty
ArgCheck.isArrayNotEmpty=Expected array to be non-empty
ArgCheck.isNotSame={0} must not be the same as {1}.
ArgCheck.contains=Expected collection to contain value, but it did not
ArgCheck.isPropertiesNotEmpty=Expected properties to be non-empty
ArgCheck.containsKey=Expected map to contain key, but it did not
ArgCheck.invalidClassMessage=The object {0} was expected to be an instance of {1} but was instance of {2}
ArgCheck.isEqual=Objects are not equal\: {0} and {1}
ArgCheck.isNotEqual=expected values to be different but they were the same ({0} and {1})
ArgCheck.isNonNegative=expected value to be non-negative but value={0}
ArgCheck.isNonPositive=expected value to be non-positive but value={0}
ArgCheck.isNegative=expected value to be negative but value={0}
ArgCheck.isPositive=expected value to be positive but value={0}
ArgCheck.isNotZeroLength=expected string to have at least one character
ArgCheck.isIdentical=expected objects to be identical ({0} and {1})
ArgCheck.isNotEmpty_Collection=expected collection to not be empty, but it was
ArgCheck.isNotEmpty_Map=expected map to not be empty, but it was
ArgCheck.contains_Collection=expected collection to contain value, but it did not
ArgCheck.contains_Map=expected map to contain key, but it did not

StringUtil.displayable=Teiid

StringNameValidator.minLengthFailure=The name must be at least {0} character(s) long
StringNameValidator.nameLengthLongerThanAllowed=The name length ({0}) is longer than allowed ({1})
StringNameValidator.firstCharMustBeAlphabetic=The first character of the name ({0}) must be an alphabetic character ([a-z]|[A-Z])
StringNameValidator.onlyAlphaOrDigit=The character ''{0}'' (at position {1}) is not allowed; only alphabetic ([a-z]|[A-Z]), digit ([0-9])) or {2} are allowed
StringNameValidator.orOtherValidChars=  '_'
StringNameValidator.nameNotNull=The name may not be null
StringNameValidator.nameSameAsOtherObjects=The name {0} is the same (ignoring case) as {1} other object(s) under the same parent
StringNameValidator.sameNameCaseSensitive=The name {0} is exactly the same as {1} other object(s) under the same parent
StringNameValidator.minLengthNotExceedMaxLength=The minimum length may not exceed the maximum length
StringNameValidator.unableMakeNameUnique=Unable to make the name {0} unique within the limits of the maximum length
StringNameValidator.charNotValidChar=The character ''{0}'' (at position {1}) is not a valid character
StringNameValidator.unquotedNameWithDelimiter=The name ({0}) contains the ''.'' delimiter. This name is required to be wrapped in double-quotes. 

FileUtils.The_name_of_the_file_may_not_be_null=The name of the file may not be null
FileUtils.The_file_extension_may_not_be_null=The file extension may not be null
FileUtils.Unable_to_create_file_in=Unable to create file in \"{0}\"
FileUtils.Unable_to_write_file_in=Unable to create file in \"{0}\"
FileUtils.Unable_to_read_file_in=Unable to create file in \"{0}\"
FileUtils.Unable_to_rename_file_in=Unable to create file in \"{0}\"
FileUtils.Unable_to_delete_file_in=Unable to create file in \"{0}\"
FileUtils.File_already_exists=File "\{0}\" already exists 
FileUtils.Unable_to_rename=Unable to rename file "\{0}\" to "\{1}\"
FileUtils.File_does_not_exist_1=File {0} does not exist.
FileUtils.Not_a_directory=\"{0}\" is not a directory.
